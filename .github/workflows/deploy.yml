name: Deploy SuperMock Site to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build application
      run: pnpm run build
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # Создаем директорию для проекта если её нет
          mkdir -p /var/www/supermock-ai-interview
          
          # Останавливаем текущий контейнер если он запущен
          docker stop supermock-ai-interview || true
          docker rm supermock-ai-interview || true
          
          # Удаляем старый образ
          docker rmi supermock-ai-interview:latest || true
          
          # Переходим в директорию проекта
          cd /var/www/supermock-ai-interview
          
          # Очищаем старые файлы
          rm -rf *
          
    - name: Upload files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        source: "."
        target: "/var/www/supermock-ai-interview"
        strip_components: 0
        
    - name: Build and start Docker container
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd /var/www/supermock-ai-interview
          
          # Исправляем Dockerfile для корректного копирования файлов
          sed -i 's|COPY Lading/supermock-ai-interview/|COPY .|g' Dockerfile
          
          # Собираем Docker образ
          docker build -t supermock-ai-interview:latest .
          
          # Запускаем контейнер
          docker run -d \
            --name supermock-ai-interview \
            --restart unless-stopped \
            -p 80:80 \
            supermock-ai-interview:latest
            
          # Очищаем неиспользуемые образы
          docker image prune -f
          
    - name: Health check
      run: |
        sleep 10
        curl -f http://${{ secrets.SERVER_HOST }} || exit 1
